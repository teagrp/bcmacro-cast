
[{:kind "Funcdef" :name "main" :type [{:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 1 1] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 28 1]
 :Parm []
 :body [{:kind "Var" :name "index" :scope "local" :DisplayType "int" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 2 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 2 7]}
{:kind "FuncCall" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 4 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 4 23]
 :Func [{:kind "DRE" :name "assert" :DisplayType "int ()" :type [{:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}} {:kind "Pointer-type" :Pointee {:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}}}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 4 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 4 3]}]
 :Parm [{:kind "Binop" :op ">" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 4 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 4 22]
 :LHS {:kind "Binop" :op "+" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 4 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 4 18]
 :LHS {:kind "DRE" :name "index" :scope "local" :DisplayType "int" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 4 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 4 10]}
 :RHS {:kind "IntegerLiteral" :value 3 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 4 18] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 4 18]}}
 :RHS {:kind "IntegerLiteral" :value 0 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 4 22] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 4 22]}}]}
{:kind "FuncCall" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 5 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 5 23]
 :Func [{:kind "DRE" :name "assert" :DisplayType "int ()" :type [{:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}} {:kind "Pointer-type" :Pointee {:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}}}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 5 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 5 3]}]
 :Parm [{:kind "Binop" :op ">" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 5 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 5 22]
 :LHS {:kind "Binop" :op "-" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 5 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 5 18]
 :LHS {:kind "DRE" :name "index" :scope "local" :DisplayType "int" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 5 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 5 10]}
 :RHS {:kind "IntegerLiteral" :value 3 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 5 18] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 5 18]}}
 :RHS {:kind "IntegerLiteral" :value 0 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 5 22] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 5 22]}}]}
{:kind "FuncCall" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 6 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 6 23]
 :Func [{:kind "DRE" :name "assert" :DisplayType "int ()" :type [{:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}} {:kind "Pointer-type" :Pointee {:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}}}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 6 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 6 3]}]
 :Parm [{:kind "Binop" :op ">" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 6 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 6 22]
 :LHS {:kind "Binop" :op "*" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 6 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 6 18]
 :LHS {:kind "DRE" :name "index" :scope "local" :DisplayType "int" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 6 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 6 10]}
 :RHS {:kind "IntegerLiteral" :value 3 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 6 18] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 6 18]}}
 :RHS {:kind "IntegerLiteral" :value 0 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 6 22] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 6 22]}}]}
{:kind "FuncCall" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 7 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 7 23]
 :Func [{:kind "DRE" :name "assert" :DisplayType "int ()" :type [{:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}} {:kind "Pointer-type" :Pointee {:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}}}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 7 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 7 3]}]
 :Parm [{:kind "Binop" :op ">" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 7 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 7 22]
 :LHS {:kind "Binop" :op "/" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 7 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 7 18]
 :LHS {:kind "DRE" :name "index" :scope "local" :DisplayType "int" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 7 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 7 10]}
 :RHS {:kind "IntegerLiteral" :value 3 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 7 18] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 7 18]}}
 :RHS {:kind "IntegerLiteral" :value 0 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 7 22] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 7 22]}}]}
{:kind "FuncCall" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 8 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 8 23]
 :Func [{:kind "DRE" :name "assert" :DisplayType "int ()" :type [{:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}} {:kind "Pointer-type" :Pointee {:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}}}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 8 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 8 3]}]
 :Parm [{:kind "Binop" :op ">" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 8 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 8 22]
 :LHS {:kind "Binop" :op "%" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 8 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 8 18]
 :LHS {:kind "DRE" :name "index" :scope "local" :DisplayType "int" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 8 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 8 10]}
 :RHS {:kind "IntegerLiteral" :value 3 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 8 18] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 8 18]}}
 :RHS {:kind "IntegerLiteral" :value 0 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 8 22] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 8 22]}}]}
{:kind "FuncCall" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 9 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 9 21]
 :Func [{:kind "DRE" :name "assert" :DisplayType "int ()" :type [{:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}} {:kind "Pointer-type" :Pointee {:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}}}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 9 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 9 3]}]
 :Parm [{:kind "Binop" :op ">" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 9 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 9 20]
 :LHS {:kind "Unop" :op "++" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 9 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 9 15] :HS {:kind "DRE" :name "index" :scope "local" :DisplayType "int" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 9 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 9 10]}}
 :RHS {:kind "IntegerLiteral" :value 0 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 9 20] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 9 20]}}]}
{:kind "FuncCall" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 10 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 10 21]
 :Func [{:kind "DRE" :name "assert" :DisplayType "int ()" :type [{:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}} {:kind "Pointer-type" :Pointee {:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}}}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 10 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 10 3]}]
 :Parm [{:kind "Binop" :op "<" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 10 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 10 20]
 :LHS {:kind "Unop" :op "--" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 10 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 10 15] :HS {:kind "DRE" :name "index" :scope "local" :DisplayType "int" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 10 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 10 10]}}
 :RHS {:kind "IntegerLiteral" :value 0 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 10 20] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 10 20]}}]}
{:kind "FuncCall" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 11 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 11 28]
 :Func [{:kind "DRE" :name "assert" :DisplayType "int ()" :type [{:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}} {:kind "Pointer-type" :Pointee {:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}}}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 11 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 11 3]}]
 :Parm [{:kind "Binop" :op "&" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 11 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 11 27]
 :LHS {:kind "DRE" :name "index" :scope "local" :DisplayType "int" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 11 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 11 10]}
 :RHS {:kind "Binop" :op ">" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 11 18] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 11 27]
 :LHS {:kind "IntegerLiteral" :value 65280 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 11 18] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 11 18]}
 :RHS {:kind "IntegerLiteral" :value 0 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 11 27] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 11 27]}}}]}
{:kind "FuncCall" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 12 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 12 28]
 :Func [{:kind "DRE" :name "assert" :DisplayType "int ()" :type [{:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}} {:kind "Pointer-type" :Pointee {:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}}}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 12 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 12 3]}]
 :Parm [{:kind "Binop" :op "|" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 12 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 12 27]
 :LHS {:kind "DRE" :name "index" :scope "local" :DisplayType "int" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 12 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 12 10]}
 :RHS {:kind "Binop" :op ">" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 12 18] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 12 27]
 :LHS {:kind "IntegerLiteral" :value 65280 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 12 18] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 12 18]}
 :RHS {:kind "IntegerLiteral" :value 0 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 12 27] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 12 27]}}}]}
{:kind "FuncCall" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 13 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 13 28]
 :Func [{:kind "DRE" :name "assert" :DisplayType "int ()" :type [{:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}} {:kind "Pointer-type" :Pointee {:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}}}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 13 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 13 3]}]
 :Parm [{:kind "Binop" :op "^" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 13 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 13 27]
 :LHS {:kind "DRE" :name "index" :scope "local" :DisplayType "int" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 13 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 13 10]}
 :RHS {:kind "Binop" :op ">" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 13 18] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 13 27]
 :LHS {:kind "IntegerLiteral" :value 65280 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 13 18] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 13 18]}
 :RHS {:kind "IntegerLiteral" :value 0 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 13 27] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 13 27]}}}]}
{:kind "FuncCall" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 14 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 14 20]
 :Func [{:kind "DRE" :name "assert" :DisplayType "int ()" :type [{:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}} {:kind "Pointer-type" :Pointee {:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}}}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 14 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 14 3]}]
 :Parm [{:kind "Binop" :op ">" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 14 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 14 19]
 :LHS {:kind "Unop" :op "~" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 14 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 14 11] :HS {:kind "DRE" :name "index" :scope "local" :DisplayType "int" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 14 11] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 14 11]}}
 :RHS {:kind "IntegerLiteral" :value 0 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 14 19] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 14 19]}}]}
{:kind "FuncCall" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 15 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 15 24]
 :Func [{:kind "DRE" :name "assert" :DisplayType "int ()" :type [{:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}} {:kind "Pointer-type" :Pointee {:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}}}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 15 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 15 3]}]
 :Parm [{:kind "Binop" :op ">" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 15 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 15 23]
 :LHS {:kind "Binop" :op "<<" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 15 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 15 19]
 :LHS {:kind "DRE" :name "index" :scope "local" :DisplayType "int" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 15 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 15 10]}
 :RHS {:kind "IntegerLiteral" :value 1 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 15 19] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 15 19]}}
 :RHS {:kind "IntegerLiteral" :value 0 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 15 23] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 15 23]}}]}
{:kind "FuncCall" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 16 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 16 24]
 :Func [{:kind "DRE" :name "assert" :DisplayType "int ()" :type [{:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}} {:kind "Pointer-type" :Pointee {:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}}}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 16 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 16 3]}]
 :Parm [{:kind "Binop" :op ">" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 16 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 16 23]
 :LHS {:kind "Binop" :op ">>" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 16 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 16 19]
 :LHS {:kind "DRE" :name "index" :scope "local" :DisplayType "int" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 16 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 16 10]}
 :RHS {:kind "IntegerLiteral" :value 1 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 16 19] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 16 19]}}
 :RHS {:kind "IntegerLiteral" :value 0 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 16 23] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 16 23]}}]}
{:kind "FuncCall" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 17 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 17 23]
 :Func [{:kind "DRE" :name "assert" :DisplayType "int ()" :type [{:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}} {:kind "Pointer-type" :Pointee {:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}}}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 17 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 17 3]}]
 :Parm [{:kind "Binop" :op "=" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 17 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 17 22]
 :LHS {:kind "DRE" :name "index" :scope "local" :DisplayType "int" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 17 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 17 10]}
 :RHS {:kind "Binop" :op ">" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 17 18] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 17 22]
 :LHS {:kind "IntegerLiteral" :value 3 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 17 18] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 17 18]}
 :RHS {:kind "IntegerLiteral" :value 0 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 17 22] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 17 22]}}}]}
{:kind "FuncCall" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 18 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 18 24]
 :Func [{:kind "DRE" :name "assert" :DisplayType "int ()" :type [{:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}} {:kind "Pointer-type" :Pointee {:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}}}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 18 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 18 3]}]
 :Parm [{:kind "Binop" :op "+=" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 18 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 18 23]
 :LHS {:kind "DRE" :name "index" :scope "local" :DisplayType "int" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 18 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 18 10]}
 :RHS {:kind "Binop" :op ">" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 18 19] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 18 23]
 :LHS {:kind "IntegerLiteral" :value 3 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 18 19] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 18 19]}
 :RHS {:kind "IntegerLiteral" :value 0 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 18 23] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 18 23]}}}]}
{:kind "FuncCall" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 19 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 19 24]
 :Func [{:kind "DRE" :name "assert" :DisplayType "int ()" :type [{:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}} {:kind "Pointer-type" :Pointee {:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}}}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 19 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 19 3]}]
 :Parm [{:kind "Binop" :op "-=" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 19 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 19 23]
 :LHS {:kind "DRE" :name "index" :scope "local" :DisplayType "int" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 19 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 19 10]}
 :RHS {:kind "Binop" :op ">" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 19 19] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 19 23]
 :LHS {:kind "IntegerLiteral" :value 3 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 19 19] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 19 19]}
 :RHS {:kind "IntegerLiteral" :value 0 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 19 23] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 19 23]}}}]}
{:kind "FuncCall" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 20 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 20 24]
 :Func [{:kind "DRE" :name "assert" :DisplayType "int ()" :type [{:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}} {:kind "Pointer-type" :Pointee {:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}}}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 20 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 20 3]}]
 :Parm [{:kind "Binop" :op "*=" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 20 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 20 23]
 :LHS {:kind "DRE" :name "index" :scope "local" :DisplayType "int" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 20 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 20 10]}
 :RHS {:kind "Binop" :op ">" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 20 19] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 20 23]
 :LHS {:kind "IntegerLiteral" :value 3 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 20 19] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 20 19]}
 :RHS {:kind "IntegerLiteral" :value 0 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 20 23] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 20 23]}}}]}
{:kind "FuncCall" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 21 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 21 24]
 :Func [{:kind "DRE" :name "assert" :DisplayType "int ()" :type [{:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}} {:kind "Pointer-type" :Pointee {:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}}}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 21 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 21 3]}]
 :Parm [{:kind "Binop" :op "/=" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 21 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 21 23]
 :LHS {:kind "DRE" :name "index" :scope "local" :DisplayType "int" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 21 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 21 10]}
 :RHS {:kind "Binop" :op ">" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 21 19] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 21 23]
 :LHS {:kind "IntegerLiteral" :value 3 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 21 19] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 21 19]}
 :RHS {:kind "IntegerLiteral" :value 0 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 21 23] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 21 23]}}}]}
{:kind "FuncCall" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 22 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 22 24]
 :Func [{:kind "DRE" :name "assert" :DisplayType "int ()" :type [{:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}} {:kind "Pointer-type" :Pointee {:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}}}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 22 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 22 3]}]
 :Parm [{:kind "Binop" :op "%=" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 22 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 22 23]
 :LHS {:kind "DRE" :name "index" :scope "local" :DisplayType "int" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 22 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 22 10]}
 :RHS {:kind "Binop" :op ">" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 22 19] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 22 23]
 :LHS {:kind "IntegerLiteral" :value 3 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 22 19] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 22 19]}
 :RHS {:kind "IntegerLiteral" :value 0 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 22 23] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 22 23]}}}]}
{:kind "FuncCall" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 23 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 23 29]
 :Func [{:kind "DRE" :name "assert" :DisplayType "int ()" :type [{:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}} {:kind "Pointer-type" :Pointee {:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}}}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 23 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 23 3]}]
 :Parm [{:kind "Binop" :op "&=" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 23 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 23 28]
 :LHS {:kind "DRE" :name "index" :scope "local" :DisplayType "int" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 23 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 23 10]}
 :RHS {:kind "Binop" :op ">" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 23 19] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 23 28]
 :LHS {:kind "IntegerLiteral" :value 65280 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 23 19] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 23 19]}
 :RHS {:kind "IntegerLiteral" :value 0 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 23 28] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 23 28]}}}]}
{:kind "FuncCall" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 24 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 24 29]
 :Func [{:kind "DRE" :name "assert" :DisplayType "int ()" :type [{:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}} {:kind "Pointer-type" :Pointee {:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}}}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 24 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 24 3]}]
 :Parm [{:kind "Binop" :op "|=" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 24 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 24 28]
 :LHS {:kind "DRE" :name "index" :scope "local" :DisplayType "int" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 24 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 24 10]}
 :RHS {:kind "Binop" :op ">" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 24 19] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 24 28]
 :LHS {:kind "IntegerLiteral" :value 65280 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 24 19] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 24 19]}
 :RHS {:kind "IntegerLiteral" :value 0 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 24 28] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 24 28]}}}]}
{:kind "FuncCall" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 25 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 25 29]
 :Func [{:kind "DRE" :name "assert" :DisplayType "int ()" :type [{:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}} {:kind "Pointer-type" :Pointee {:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}}}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 25 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 25 3]}]
 :Parm [{:kind "Binop" :op "^=" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 25 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 25 28]
 :LHS {:kind "DRE" :name "index" :scope "local" :DisplayType "int" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 25 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 25 10]}
 :RHS {:kind "Binop" :op ">" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 25 19] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 25 28]
 :LHS {:kind "IntegerLiteral" :value 65280 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 25 19] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 25 19]}
 :RHS {:kind "IntegerLiteral" :value 0 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 25 28] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 25 28]}}}]}
{:kind "FuncCall" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 26 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 26 25]
 :Func [{:kind "DRE" :name "assert" :DisplayType "int ()" :type [{:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}} {:kind "Pointer-type" :Pointee {:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}}}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 26 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 26 3]}]
 :Parm [{:kind "Binop" :op "<<=" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 26 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 26 24]
 :LHS {:kind "DRE" :name "index" :scope "local" :DisplayType "int" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 26 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 26 10]}
 :RHS {:kind "Binop" :op ">" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 26 20] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 26 24]
 :LHS {:kind "IntegerLiteral" :value 1 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 26 20] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 26 20]}
 :RHS {:kind "IntegerLiteral" :value 0 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 26 24] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 26 24]}}}]}
{:kind "FuncCall" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 27 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 27 25]
 :Func [{:kind "DRE" :name "assert" :DisplayType "int ()" :type [{:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}} {:kind "Pointer-type" :Pointee {:kind "Func-type" :ParmsType [] :RetType {:kind "Int-type"}}}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 27 3] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 27 3]}]
 :Parm [{:kind "Binop" :op ">>=" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 27 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 27 24]
 :LHS {:kind "DRE" :name "index" :scope "local" :DisplayType "int" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 27 10] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 27 10]}
 :RHS {:kind "Binop" :op ">" :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 27 20] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 27 24]
 :LHS {:kind "IntegerLiteral" :value 1 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 27 20] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 27 20]}
 :RHS {:kind "IntegerLiteral" :value 0 :type [{:kind "Int-type"}] :loc-begin ["/home/kasutani/sample/exp31/exp31.c" 27 24] :loc-end ["/home/kasutani/sample/exp31/exp31.c" 27 24]}}}]}]}
] 

