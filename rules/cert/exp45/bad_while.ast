
[{:kind "Funcdef" :name "f" :type [{:kind "Func-type" :ParmsType [{:kind "Int-type"} {:kind "Int-type"}] :RetType {:kind "Int-type"}}] :loc-begin ["/home/rules/cert/exp45/bad_while.c" 1 1] :loc-end ["/home/rules/cert/exp45/bad_while.c" 5 1]
 :Parm [{:kind "Parm" :name "a" :type [{:kind "Int-type"}] :loc-begin ["/home/rules/cert/exp45/bad_while.c" 1 7] :loc-end ["/home/rules/cert/exp45/bad_while.c" 1 11]}
{:kind "Parm" :name "b" :type [{:kind "Int-type"}] :loc-begin ["/home/rules/cert/exp45/bad_while.c" 1 14] :loc-end ["/home/rules/cert/exp45/bad_while.c" 1 18]}]
 :body [{:kind "While" :loc-begin ["/home/rules/cert/exp45/bad_while.c" 2 3] :loc-end ["/home/rules/cert/exp45/bad_while.c" 3 6]
 :condition {:kind "Binop" :op "=" :type [{:kind "Int-type"}] :loc-begin ["/home/rules/cert/exp45/bad_while.c" 2 10] :loc-end ["/home/rules/cert/exp45/bad_while.c" 2 14]
 :LHS {:kind "DRE" :name "a" :scope "local" :DisplayType "int" :type [{:kind "Int-type"}] :loc-begin ["/home/rules/cert/exp45/bad_while.c" 2 10] :loc-end ["/home/rules/cert/exp45/bad_while.c" 2 10]}
 :RHS {:kind "DRE" :name "b" :scope "local" :DisplayType "int" :type [{:kind "Int-type"}] :loc-begin ["/home/rules/cert/exp45/bad_while.c" 2 14] :loc-end ["/home/rules/cert/exp45/bad_while.c" 2 14]}}
 :body [{:kind "Unop" :op "++" :type [{:kind "Int-type"}] :loc-begin ["/home/rules/cert/exp45/bad_while.c" 3 5] :loc-end ["/home/rules/cert/exp45/bad_while.c" 3 6] :HS {:kind "DRE" :name "a" :scope "local" :DisplayType "int" :type [{:kind "Int-type"}] :loc-begin ["/home/rules/cert/exp45/bad_while.c" 3 5] :loc-end ["/home/rules/cert/exp45/bad_while.c" 3 5]}}]}
{:kind "Ret" :loc-begin ["/home/rules/cert/exp45/bad_while.c" 4 3] :loc-end ["/home/rules/cert/exp45/bad_while.c" 4 10] :value {:kind "DRE" :name "b" :scope "local" :DisplayType "int" :type [{:kind "Int-type"}] :loc-begin ["/home/rules/cert/exp45/bad_while.c" 4 10] :loc-end ["/home/rules/cert/exp45/bad_while.c" 4 10]}}]}] 

